#align(center)[
  #text(size: 14pt, weight: "bold")[1 этап]
]

#v(0.5cm)

*1. Предметная область*

#v(0.25cm)

С преподавателем согласована предметная область: “Информационная система для платформы обмена сновидениями Dream Marketplace”.

\

*2. Подробное текстовое описание предметной области*

#v(0.25cm)

*Dream Marketplace* — это онлайн-платформа для фиксации, визуализации и обмена сновидениями. Пользователи создают записи своих снов в текстовом формате, после чего могут превратить их в мультимедийный контент (изображение, видео) с помощью встроенного AI-сервиса.
Полученные результаты оформляются как лоты, которые можно выставлять на продажу или хранить результаты в коллекции.
Платформа поддерживает социальные функции (комментарии, рейтинги), а также механизмы защиты авторских прав и распределения роялти.

\

*Ключевые аспекты предметной области:*

+ *Фиксация снов*
    - Пользователь создаёт *текстовую запись сна* в удобной форме.
    - Записи могут храниться как *приватные* (только для себя) или *публичные* (для сообщества).
    - Для удобства снабжаются *категориями* (кошмар, романтика, приключение, абстракция и т. д.) и *тегами* (ключевые слова).
    - Записи служат основой для дальнейшей визуализации и превращаются в первичную сущность контента.

+ *Визуализация*
    - Встроенный *AI-сервис* преобразует текстовую запись сна в мультимедийный объект (изображение или короткое видео).
    - Визуализация хранится вместе с исходным сном, чтобы можно было проследить связь.
    - Пользователь может *повторно генерировать визуализацию* (например, получить новый вариант, если первый не понравился).
    - Визуализации могут быть использованы для создания лотов или для личной коллекции.

+ *Маркетплейс*
    - Любая визуализация сна может быть оформлена как лот.
    - Визуализации могут находиться в двух состояниях: *«активный» *(доступен для покупки и оформлен как лот) или *«в коллекции»* (только для владельца).
    - Продажа осуществляется через встроенные транзакции: покупатель оплачивает, продавец получает роялти, платформа удерживает комиссию.
    - Вся история операций хранится в системе (для отчётности и защиты прав пользователей).

+ *Авторские права и роялти*
    - За каждым сном и визуализацией закрепляется *владелец* (автор сна).
    - При продаже визуализации автоматически фиксируется распределение роялти:
        - Автор сна получает вознаграждение.
        - Платформа удерживает комиссию.
    - Авторские права хранятся в системе и связаны с каждой визуализацией и лотом.
    - При возникновении споров (например, кто настоящий автор сна) система предоставляет доказательную базу — дату создания записи и историю ее изменений.

+ *Социальное взаимодействие*
    - Пользователи могут *комментировать* сны и визуализации, оставляя отзывы и предложения.
    - Работы можно *оценивать* (например, через рейтинг в баллах от 1 до 5).
    - Формируется сообщество, в котором пользователи делятся своим контентом, дают обратную связь и находят интересные образы.

+ *Категоризация и поиск*
    - Сны и визуализации разделяются по *категориям* («кошмары», «романтические», «приключения», «сюрреализм» и др.).
    - Дополнительно применяются *теги*, которые помогают находить работы по ключевым словам.

+ *Модерация*
    - Чтобы поддерживать качество и безопасность контента, вводится *блокировка* неприемлемых снов или визуализаций (нарушающих правила платформы).

\

*3. Зачем нужна информационная система и решаемые ей задачи*

#v(0.25cm)

*Dream Marketplace* — это не просто сайт с картинками снов. Наша информационная система не только хранит записи и картинки, но и упорядочивает процессы: кто и когда создал сон, как он превратился в изображение, кто на что имеет права и как происходят платежи. Без такой системы всё быстро превратится в набор разбросанных файлов, сообщений в мессенджерах и устных договоренностей — а это неудобно и ненадежно для пользователей и для бизнеса.

\

*Задачи решаемые системой:*
+ *Сохранить и зафиксировать уникальный опыт* — не терять яркие и важные сны, иметь централизованное хранение и историю версий.
+ *Придать сну визуальную форму без технических усилий* — получить качественную картинку/видео из текста без навыков дизайна.
+ *Монетизировать творческую идею* — получить доход от оригинального содержания (роялти при продаже визуализации).
+ *Защитить авторские права и доказать приоритет* — иметь зафиксированные метаданные (дата, версия), на которые можно опираться в спорах об авторстве.
+ *Находить уникальный контент для коллекции или вдохновения* — быстро искать по темам, тегам и рейтингам.
+ *Приобретать контент безопасно и прозрачно* — совершать транзакции с автоматическим учетом роялти и комиссий.
+ *Избежать хаоса при хранении и передаче файлов* — не использовать мессенджеры/почту для согласования визуализации — всё централизовано.
+ *Участвовать в сообществе и развивать навыки* — получать реакцию на свои записи, участвовать в обсуждениях.

\

*4. Функциональные и нефункциональные требования*

#v(0.25cm)

*Функциональные требования*

*FR1*. Система должна предоставлять возможность пользователю зарегистрироваться на платформе (создать учётную запись).  

*FR2*. Система должна обеспечивать пользователю возможность входа в систему (авторизация).

*FR3*. Система должна предоставлять пользователю возможность просматривать и редактировать свой профиль.

*FR4*. Система должна предоставлять пользователю возможность создавать текстовую запись сна с указанием заголовка, описания, категории и тегов.

*FR5*. Система должна предоставлять пользователю возможность указывать для записи уровень приватности (приватная / публичная).  

*FR6*. Система должна предоставлять пользователю возможность просматривать список своих записей. 

*FR7*. Система должна предоставлять пользователю возможность запрашивать генерацию визуализации (изображения/видео) для выбранной записи сна (отправлять задачу в очередь).  

*FR8*. Система должна предоставлять пользователю возможность просматривать сгенерированные визуализации, выбирать и сохранять понравившийся вариант.  

*FR9*. Система должна обеспечивать пользователю возможность оформлять визуализацию как лот: задавать название, описание, цену.  

*FR10*. Система должна предоставлять пользователю возможность просматривать каталог публичных лотов и визуализаций с фильтрацией по категориям, тегам, автору и сортировкой по дате.  

*FR11*. Система должна предоставлять пользователю возможность просматривать страницу лота с превью, описанием и т.д.  

*FR12*. Система должна обеспечивать пользователю возможность покупать лот через платёжную систему и закреплять право за покупателем при успешной оплате.  

*FR13*. Система должна предоставлять пользователю возможность оставлять комментарии и ставить рейтинг лоту.  

*FR14*. Система должна предоставлять пользователю возможность просматривать свой баланс и покупки. 

*FR15*. Система должна предоставлять пользователю возможность запросить повторную генерацию визуализации (получить альтернативный вариант). 

*FR16*. Система должна обеспечивать пользователю возможность скачивать купленную визуализацию в доступном формате.  

*FR17*. Система должна предоставлять администратору возможность просматривать и модерировать лоты (блокировать неприемлемые лоты).  

#pagebreak()

*Нефункциональные требования*

*Требования к удобству использования*

*U1*. Система должна предоставлять адаптивный пользовательский интерфейс, корректно отображающийся на типичных десктопных и мобильных разрешениях.  

*U2*. Система должна корректно работать в современных браузерах: Chrome 79+, Safari 12+, Mozilla Firefox 100+, Яндекс.Браузер 20+. 

*U3*. Система должна обеспечивать интуитивную навигацию, позволяющую находить ключевые функции платформы (создание сна, генерация, выставление лота, поиск) без длительного обучения.  

\

*Требования к надежности*

*REL1*. Система должна обеспечивать атомарность и консистентность финансовых операций; в случае ошибок операции должны корректно откатываться.  

*REL2*. Система должна обеспечивать устойчивую обработку задач генерации через очередь с поддержкой повторных попыток.  

\

*Требования к производительности*

*PER1*. Система должна обрабатывать операции чтения с минимальными задержками и в рамках заданных показателей производительности.  

*PER2*. Система должна выполнять генерацию визуализаций асинхронно через очередь задач, чтобы не блокировать пользовательские запросы.  

*PER3*. Система должна обеспечивать приемлемое время первого отображения содержимого страниц при нормальных условиях сети.  

*PER4*. Система должна обеспечивать корректную работу при одновременной активности определенного числа пользователей.  

\

*Требования к поддерживаемости*

*SUP1*. Архитектура системы должна позволять горизонтальное масштабирование бэкенд-сервисов.  

*SUP2*. Система должна генерировать структурированные логи ошибок и событий в формате, удобном для агрегирования и анализа.  

\

*Внешние интерфейсы*

*A1*. Система должна предоставлять документированный REST API (OpenAPI) для взаимодействия фронтенда и внешних сервисов.  

*A2*. Развертывание локальной рабочей среды должно быть воспроизводимым с помощью Docker и docker-compose.  

*A3*. Система должна управлять конфигурацией через переменные окружения; реальные секреты не должны храниться в кодовой базе.  

*5. Модели основных прецедентов* 

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Регистрация пользователя],
  [ID], [1],
  [Краткое описание], [Создание новой учётной записи на платформе],
  [Главный актер], [Гость],
  [Второстепенные актеры], [Система аутентификации, почтовый сервер],
  [Предусловия], [Пользователь не авторизован],
  [Основной поток], [
    1. Гость открывает страницу регистрации.
    2. Вводит требуемые данные (email, логин, пароль и др.).
    3. Нажимает «Зарегистрироваться».
    4. Система проверяет корректность данных и уникальность логина/email.
    5. Система создаёт учётную запись и отправляет подтверждение на email.
    6. Пользователь видит сообщение об успешной регистрации.
  ],
  [Альтернативный поток], [Если данные некорректны или логин/email заняты → показать ошибку и вернуть форму для исправления],
  [Постусловия], [Учётная запись создана]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Вход в систему (авторизация)],
  [ID], [2],
  [Краткое описание], [Пользователь входит под своей учётной записью],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система аутентификации],
  [Предусловия], [У пользователя есть зарегистрированная учетная запись],
  [Основной поток], [
    1. Пользователь открывает страницу входа.
    2. Вводит логин (или email) и пароль.
    3. Система проверяет данные, выдаёт токен.
    4. Пользователь перенаправляется в личный кабинет.
  ],
  [Альтернативный поток], [Некорректные учётные данные → сообщение об ошибке],
  [Постусловия], [Пользователь авторизован и имеет доступ к своим функциям]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Просмотр и редактирование профиля],
  [ID], [3],
  [Краткое описание], [Просмотр и изменение личной информации пользователя],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система хранения данных],
  [Предусловия], [Пользователь авторизован],
  [Основной поток], [
    1. Пользователь открывает страницу профиля.
    2. Система отображает текущие данные профиля.
    3. Пользователь вносит изменения (имя, биография, аватар и т.д.).
    4. Нажимает «Сохранить».
    5. Система валидирует и сохраняет изменения.
  ],
  [Альтернативный поток], [Ошибка валидации → показать сообщения об ошибках],
  [Постусловия], [Профиль обновлен]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Создание текстовой записи сна],
  [ID], [4],
  [Краткое описание], [Пользователь создаёт новую текстовую запись сна с метаданными],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система хранения данных],
  [Предусловия], [Пользователь авторизован],
  [Основной поток], [
    1. Пользователь открывает форму «Новый сон».
    2. Вводит заголовок, описание, выбирает категорию и теги, указывает приватность (публичный/приватный).
    3. Нажимает «Сохранить».
    4. Система сохраняет запись с метаданными и присваивает ID/дату.
  ],
  [Альтернативный поток], [Прерывание (нет соединения) → сообщение об ошибке],
  [Постусловия], [Запись сна сохранена в базе]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Просмотр списка своих записей],
  [ID], [5],
  [Краткое описание], [Просмотр пользователем списка созданных им записей сна],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система хранения данных],
  [Предусловия], [Пользователь авторизован и имеет хотя бы одну запись],
  [Основной поток], [
    1. Пользователь открывает раздел «Мои сны».
    2. Система отображает список записей (с заголовками, датами, статусами).
    3. Пользователь выбирает запись для просмотра/редактирования или удаления.
  ],
  [Альтернативный поток], [Список пуст → показать подсказку «Создать запись»],
  [Постусловия], [Пользователь увидел список и может перейти к дальнейшим действиям]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Запрос генерации визуализации],
  [ID], [6],
  [Краткое описание], [Инициирование генерации изображения/видео по текстовой записи],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Сервис очередей (Kafka), AI-сервис],
  [Предусловия], [Существуют одна или несколько сохранённых записей сна; пользователь авторизован],
  [Основной поток], [
    1. Пользователь на странице записи нажимает «Сгенерировать визуализацию».
    2. Система формирует задачу и помещает её в очередь обработки.
    3. UI показывает статус задачи (queued).
    4. Воркер извлекает задачу и отправляет запрос к AI-сервису; после получения результата сохраняет визуализацию.
    5. Система обновляет статус задачи на «done» и уведомляет пользователя.
  ],
  [Альтернативный поток], [AI-сервис недоступен или ошибка → задача помечается как «error»; уведомление пользователя],
  [Постусловия], [Сгенерированные файлы сохранены и связаны с записью сна (или задача в ошибочном состоянии)]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Просмотр сгенерированных визуализаций и выбор варианта],
  [ID], [7],
  [Краткое описание], [Просмотр результатов генерации и сохранение выбранного варианта],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система хранения файлов],
  [Предусловия], [Генерация завершена, доступны варианты визуализаций],
  [Основной поток], [
    1. Пользователь открывает страницу с результатами генерации для своей записи.
    2. Система отображает превью всех вариантов.
    3. Пользователь выбирает понравившийся вариант и нажимает «Сохранить как основной» или «Добавить в коллекцию».
    4. Система отмечает выбранный вариант и сохраняет метаданные.
  ],
  [Альтернативный поток], [Пользователь запрашивает повторную генерацию (переход к 6)],
  [Постусловия], [Выбранный вариант сохранён и готов к оформлению лота или хранению]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Выставление визуализации как лота],
  [ID], [8],
  [Краткое описание], [Формирование и публикация лота на маркетплейсе на основе визуализации],
  [Главный актер], [Пользователь (владелец визуализации)],
  [Второстепенные актеры], [Система торговой площадки, модератор],
  [Предусловия], [Имеется сохраненная визуализация, пользователь авторизован],
  [Основной поток], [
    1. Пользователь открывает форму «Создать лот» для выбранной визуализации.
    2. Заполняет название, описание, цену и условия продажи.
    3. Нажимает «Опубликовать».
    4. Система создаёт лот с соответствующим статусом и отображает его в каталоге.
  ],
  [Альтернативный поток], [При модерации модератор отклоняет лот → уведомление владельцу],
  [Постусловия], [Лот создан и доступен для просмотра другими пользователями]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Просмотр каталога публичных лотов и фильтрация],
  [ID], [9],
  [Краткое описание], [Поиск и просмотр доступных для покупки лотов с фильтрами и сортировкой],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система поиска/фильтрации],
  [Предусловия], [Существуют публичные лоты],
  [Основной поток], [
    1. Пользователь переходит в раздел «Каталог».
    2. Вводит параметры поиска или выбирает фильтры (категории, теги, автор).
    3. Система формирует результаты и отображает их с возможностью сортировки.
    4. Пользователь выбирает интересующий лот для просмотра.
  ],
  [Альтернативный поток], [Нет совпадений → подсказки/рекомендации],
  [Постусловия], [Пользователь получил список релевантных лотов]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Просмотр страницы лота],
  [ID], [10],
  [Краткое описание], [Просмотр детальной страницы лота с превью, описанием, информацией об авторе и цене],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система страниц лота],
  [Предусловия], [Лот публичен и доступен],
  [Основной поток], [
    1. Пользователь открывает страницу лота.
    2. Система отображает превью, описание, цену, информацию об авторе и кнопки «Купить», «Комментировать», «Поставить рейтинг».
    3. Пользователь может перейти к покупке или оставить отзыв.
  ],
  [Альтернативный поток], [Лот снят с продажи → уведомление],
  [Постусловия], [Информация о лоте отображена; пользователь может инициировать покупку/комментарий]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Покупка лота],
  [ID], [11],
  [Краткое описание], [Приобретение лота пользователем с обработкой платежа и закреплением прав],
  [Главный актер], [Пользователь-покупатель],
  [Второстепенные актеры], [Платёжный шлюз, система транзакций, продавец],
  [Предусловия], [Лот доступен для покупки; у покупателя есть способ оплаты],
  [Основной поток], [
    1. На странице лота пользователь нажимает «Купить».
    2. Система перенаправляет к платёжному провайдеру / открывает форму оплаты.
    3. Платёжный шлюз обрабатывает оплату и возвращает результат.
    4. Система фиксирует транзакцию, удерживает комиссию и начисляет сумму продавцу.
    5. Право/доступ к файлу закрепляется за покупателем.
  ],
  [Альтернативный поток], [Платёж не прошёл → сообщение о неудаче],
  [Постусловия], [Транзакция завершена; при успехе покупатель получил доступ к купленному материалу]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Оставление комментария и рейтинга],
  [ID], [12],
  [Краткое описание], [Пользователь оставляет отзыв и оценку на лот или визуализацию],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система хранения отзывов],
  [Предусловия], [Пользователь авторизован; страница лота доступна],
  [Основной поток], [
    1. Пользователь вводит текст комментария и/или выбирает рейтинг.
    2. Нажимает «Отправить».
    3. Система валидирует и сохраняет отзыв.
    4. Отзыв отображается на странице лота.
  ],
  [Альтернативный поток], [Пустой комментарий/некорректные символы → показать ошибку],
  [Постусловия], [Отзыв сохранен и виден другим пользователям]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Просмотр баланса и покупок],
  [ID], [13],
  [Краткое описание], [Просмотр пользователем своего баланса и покупок],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Система транзакций/баланса],
  [Предусловия], [У пользователя есть совершённые покупки или продажи],
  [Основной поток], [
    1. Пользователь открывает раздел «Мой баланс / История».
    2. Система отображает текущий баланс и покупки.
  ],
  [Альтернативный поток], [История пуста → сообщение «нет транзакций»],
  [Постусловия], [Пользователь просмотрел историю]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Модерация лотов],
  [ID], [14],
  [Краткое описание], [Администратор может блокировать лоты],
  [Главный актер], [Администратор / Модератор],
  [Второстепенные актеры], [База данных лотов],
  [Предусловия], [Модератор инициировал проверку],
  [Основной поток], [
    1. Администратор открывает панель модерации.
    2. Выбирает лот для просмотра.
    3. Анализирует содержание и решает: оставить, заблокировать, отправить на доработку.
    4. Система уведомляет владельца лота о решении.
  ],
  [Альтернативный поток], [Требуется дополнительная экспертиза → пометка «на рассмотрении»],
  [Постусловия], [Лот либо остаётся доступным, либо заблокирован/помечен; действие задокументировано]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Повторная генерация визуализации],
  [ID], [15],
  [Краткое описание], [Пользователь запрашивает дополнительную/альтернативную генерацию визуализации],
  [Главный актер], [Пользователь],
  [Второстепенные актеры], [Сервис очередей, AI-сервис],
  [Предусловия], [Существовала ранее сгенерированная визуализация для записи],
  [Основной поток], [
    1. Пользователь нажимает «Сгенерировать ещё один вариант».
    2. Система создаёт новую задачу в очереди.
    3. Процесс генерации как в 6 прецеденте.
    4. Новые варианты доступны для просмотра и выбора.
  ],
  [Альтернативный поток], [Если генерация прошла неуспешно → показать уведомление],
  [Постусловия], [Новые варианты сохранены и связаны с записью]
)

#table(
  columns: (10em, 30em),
  align: horizon,
  [Прецедент], [Скачивание купленной визуализации],
  [ID], [16],
  [Краткое описание], [Покупатель скачивает купленный файл в разрешенном формате],
  [Главный актер], [Пользователь-покупатель],
  [Второстепенные актеры], [Файловое хранилище, система прав доступа],
  [Предусловия], [Покупка завершена и право доступа закреплено за пользователем],
  [Основной поток], [
    1. Пользователь переходит в раздел «Мои покупки».
    2. Выбирает купленный лот и нажимает «Скачать».
    3. Система проверяет права и выдаёт защищённую ссылку/поток для скачивания.
    4. Файл скачивается на устройство пользователя.
  ],
  [Альтернативный поток], [Права не подтверждены → отказ и предложение обратиться в поддержку],
  [Постусловия], [Файл успешно скачан (или отказано при отсутствии прав)]
)

#pagebreak()

*6. Предложенная архитектура системы*

#v(0.25cm)

*Тип архитектуры*

Система будет реализована по *трехуровневой архитектуре*:
1. *Клиентский уровень* — отвечает за пользовательский интерфейс и взаимодействие с системой.
2. *Серверный уровень* — бизнес-логика, обработка запросов, управление данными.
3. *Уровень данных* — хранение информации о пользователях, снах, лотах и транзакциях.

\

*Основные модули*

*Фронтенд*

Фронтенд будет реализован на *Vue.js* с использованием SPA-подхода (Single Page Application). Интерфейс будет адаптивным для мобильных и десктопных устройств.
Фронтенд взаимодействует с бэкендом через RESTful API, документированный в формате OpenAPI.

\

*Бэкенд*

Бэкенд реализуется на основе *Spring Boot* по принципам MVC. Структура проекта модульная, с возможностью выделения отдельных сервисов при необходимости масштабирования.

Основные модули бэкенда:
    - *Модуль авторизации:* JWT-токены для аутентификации и авторизации пользователей.
    - *Модуль пользователей:* регистрация, редактирование профиля, управление балансом и ролями (пользователь, администратор).
    - *Модуль снов:* создание, редактирование и хранение текстовых записей снов, установка уровня приватности, управление тегами и категориями.
    - *Модуль визуализации:* постановка задач в очередь для генерации изображений/видео на основе текста сна, сохранение и предоставление результатов.
    - *Модуль маркетплейса:* создание и управление лотами, каталог с фильтрацией и сортировкой.
    - *Модуль транзакций:* интеграция с платёжной системой, проведение покупок, закрепление авторских прав.
    - *Модуль комментариев и рейтингов:* добавление отзывов и оценок к лотам.
    - *Модуль модерации:* блокировка нарушающих правил лотов.

\

*База данных*

Основные данные будут храниться в *PostgreSQL*: пользователи, сны, визуализации, лоты, транзакции, комментарии, рейтинги и т.д.

\

*Файловое хранилище*

Для мультимедийного контента (изображения, видео визуализаций) используется объектное хранилище (*Yandex Object Storage*), обеспечивающее масштабируемость и скорость работы.

#pagebreak()

*Очередь сообщений*

Для асинхронной генерации визуализаций используется *Kafka*. Это позволяет обрабатывать запросы без блокировки основного интерфейса.

\

*Общая схема архитектуры*

#image("./general_architecture.png", width: 80%)

\

*Технологии и фреймворки*

#table(
    columns: (10em, 10em),
    align: center,
    table.header(
        [*Backend*], [*Frontend*]
    ),
    [Java\
    Spring Boot\
    PostgreSQL\
    Kafka\
    Yandex Object Storage
    ], 
    [JavaScript\
    Vue.js 3\
    Vue Router\
    Pinia
    ]
)

\ 

*Вывод*

В ходе первого этапа курсовой работы мы корректно выбрали и тщательно проанализировали предметную область, подготовили ее развернутое описание, определили основные требования к разрабатываемой информационной системе, а также предложили возможный вариант архитектуры и набор технологий для её реализации. Всё это позволяет перейти к углубленному анализу и детальной проработке проекта.
